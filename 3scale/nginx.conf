user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;

    keepalive_timeout 65;

    server {
        listen 443 ssl;
        ssl_certificate     /etc/nginx/certs/service-chain.pem;
        ssl_certificate_key /etc/nginx/certs/service-key.pem;
        server_name localhost;

        # Prevent websocket access on /api
        location ~ ^/api/.*/cockpit/socket {
            return 418 'websocket cannot be routed via /api';
        }

        location /wss/ {
            auth_basic "Basic Auth required";
            auth_basic_user_file /etc/nginx/.htpasswd;
            # Don't pass on proxy auth
            proxy_set_header Authorization "";

            # HACK: podman < 4 cannot DNS-resolve container names in pod, so use pod name
            # proxy_pass http://webconsoleapp-front-end:8080;
            proxy_pass http://webconsoleapp:8080;
            # Required to proxy the connection to Cockpit
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Required for web sockets to function
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Pass ETag header from Cockpit to clients.
            # See: https://github.com/cockpit-project/cockpit/issues/5239
            gzip off;
        }

        location /api/ {
            auth_basic "Basic Auth required";
            auth_basic_user_file /etc/nginx/.htpasswd;
            # Don't pass on proxy auth
            proxy_set_header Authorization "";

            # HACK: podman < 4 cannot DNS-resolve container names in pod, so use pod name
            # proxy_pass http://webconsoleapp-front-end:8080;
            proxy_pass http://webconsoleapp:8080;
        }

        location / {
            return 418 'no route found in 3scale \r\n';
        }
    }
}
